"use strict";(self.webpackChunkclarity=self.webpackChunkclarity||[]).push([[420],{84420:(T,s,a)=>{a.r(s),a.d(s,{CardsDemoModule:()=>w});var v=a(44716),r=a(91368),l=a(16632),h=a(17076),m=a(24248),C=a(96200),c=a(54496),u=a(6400),p=a(42894),n=a(89608);function k(e,o){1&e&&(c.I0R(0,"div",7),c.OEk(1,"Click to select me"),c.C$Y())}function E(e,o){1&e&&(c.I0R(0,"div",7),c.OEk(1,"I am the selected card"),c.C$Y())}function f(e,o){if(1&e){const d=c.KQA();c.I0R(0,"div",4)(1,"div",20),c.qCj("click",function(){const A=c.usT(d).index,D=c.GaO();return c.CGJ(D.activateCard(A))}),c.I0R(2,"div",6),c.OEk(3),c.C$Y(),c.yuY(4,k,2,0,"div",21)(5,E,2,0,"div",21),c.C$Y()()}if(2&e){const d=o.$implicit;c.yG2(),c.eAK("card-active",d.active),c.yG2(2),c.cNF(d.title),c.yG2(),c.E7m("ngIf",!d.active),c.yG2(),c.E7m("ngIf",d.active)}}function I(e,o){1&e&&(c.I0R(0,"clr-dropdown-menu",22)(1,"button",23),c.OEk(2,"Edit"),c.C$Y(),c.I0R(3,"button",23),c.OEk(4,"Duplicate"),c.C$Y(),c.I0R(5,"button",23),c.OEk(6,"Delete"),c.C$Y()())}m.I.addIcons(C.u);let R=(()=>{class e extends h.a{htmlExample='\n<div class="clr-row">\n    <div class="clr-col-4">\n        <div class="card card-active clickable">\n            <div class="card-header">\n                I am an active card\n            </div>\n            <div class="card-block">\n                I am also clickable\n            </div>\n        </div>\n    </div>\n    <div class="clr-col-4">\n        <div class="card clickable">\n            <div class="card-header">\n                I am a non active card\n            </div>\n            <div class="card-block">\n                But I am clickable\n            </div>\n        </div>\n    </div>\n    <div class="clr-col-4">\n        <div class="card">\n            <div class="card-header">\n                I am a non active card\n            </div>\n            <div class="card-block">\n                And I am also not clickable\n            </div>\n        </div>\n    </div>\n</div>\n';htmlExamplePlaceholder='\n<div class="card card-placeholder">\n    <div class="card-header">\n        Placeholder card\n    </div>\n    <div class="card-block">\n        Card block\n        <div>\n            <a class="btn btn-link">Action</a>\n        </div>\n    </div>\n</div>\n';htmlExampleCustomActions='\n<div class="card">\n    <div class="card-header">\n        Card header with custom actions\n        <clr-dropdown class="card-actions">\n            <button type="button" class="btn btn-icon btn-link card-action dropdown-toggle" clrDropdownTrigger>\n                <cds-icon shape="ellipsis-vertical"></cds-icon>\n            </button>\n            <clr-dropdown-menu clrPosition="bottom-right" *clrIfOpen>\n                ...\n            </clr-dropdown-menu>\n        </clr-dropdown>\n    </div>\n    <div class="card-block">\n        Card Block\n    </div>\n</div>\n';cards=[{title:"Selectable card",active:!0},{title:"Selectable card",active:!1},{title:"Selectable card",active:!1}];activateCard(d){for(let t of this.cards)t.active=!1;this.cards[d].active=!0}constructor(){super("cards")}static \u0275fac=function(t){return new(t||e)};static \u0275cmp=c.In1({type:e,selectors:[["clr-cards-demo"]],hostVars:4,hostBindings:function(t,i){2&t&&c.eAK("content-area",!0)("dox-content-panel",!0)},features:[c.eg9],decls:85,vars:5,consts:[[3,"title"],["id","cards-header",1,"component-summary"],["id","design-guidelines"],[1,"clr-row"],[1,"clr-col-4"],[1,"card","clickable"],[1,"card-header"],[1,"card-block"],["href","https://clarity.design/documentation/cards"],["class","clr-col-4",4,"ngFor","ngForOf"],[1,"clr-code"],["id","examples"],[3,"clrCode"],[1,"card","card-placeholder"],[1,"btn","btn-link"],[1,"card"],[1,"card-actions"],["type","button","clrDropdownTrigger","",1,"btn","btn-icon","btn-link","card-action","dropdown-toggle"],["shape","ellipsis-vertical"],["clrPosition","bottom-right",4,"clrIfOpen"],[1,"card","selectable",3,"click"],["class","card-block",4,"ngIf"],["clrPosition","bottom-right"],["type","button","clrDropdownItem",""]],template:function(t,i){1&t&&(c.I0R(0,"clr-doc-wrapper",0)(1,"article")(2,"h5",1),c.OEk(3," The Addons extend the default Clarity cards by providing following additional types: "),c.C$Y(),c.I0R(4,"ul")(5,"li"),c.OEk(6,"Selectable card. The selected stays visually highlighted."),c.C$Y(),c.I0R(7,"li"),c.OEk(8,"Placeholder card. Represents an empty card which can be filled by user actions."),c.C$Y()(),c.I0R(9,"h2"),c.OEk(10,"Selectable card"),c.C$Y(),c.I0R(11,"div",2)(12,"h3"),c.OEk(13,"Behavior"),c.C$Y(),c.I0R(14,"p"),c.OEk(15," Only one card at the time can have the selection indicator. Compare this behavior to a radio button. Note the different hover style in the example below. "),c.C$Y(),c.I0R(16,"h6"),c.OEk(17,"Default clickable card (Standard Clarity)"),c.C$Y(),c.I0R(18,"div",3)(19,"div",4)(20,"div",5)(21,"div",6),c.OEk(22,"Default card"),c.C$Y(),c.I0R(23,"div",7),c.OEk(24," See the official "),c.I0R(25,"a",8),c.OEk(26,"Clarity documentation"),c.C$Y(),c.OEk(27," for details. "),c.C$Y()()()(),c.I0R(28,"h6"),c.OEk(29,"Selectable card (Clarity Addons)"),c.C$Y(),c.I0R(30,"div",3),c.yuY(31,f,6,5,"div",9),c.C$Y(),c.I0R(32,"h3"),c.OEk(33,"Usage"),c.C$Y(),c.I0R(34,"p"),c.OEk(35," On contrast to the default clickable-cards, the selectable card does not start an action, it is only marked as selected. Note that multiple selection is not supported. If you depend on multi-selection, use a different element such as a checkbox. A selectable card should have the class "),c.I0R(36,"code",10),c.OEk(37,"selectable"),c.C$Y(),c.OEk(38," instead of the clarity-default "),c.I0R(39,"code",10),c.OEk(40,"clickable"),c.C$Y(),c.OEk(41," class. Use the "),c.I0R(42,"code",10),c.OEk(43,"card-active"),c.C$Y(),c.OEk(44," class to mark the currently selected one. "),c.C$Y()(),c.I0R(45,"div",11),c.wR5(46,"clr-code-snippet",12),c.C$Y(),c.I0R(47,"h2"),c.OEk(48,"Placeholder card"),c.C$Y(),c.OEk(49," The placeholder card represents an empty card by a dashed border. The style is provided by class "),c.I0R(50,"code",10),c.OEk(51,"card-placeholder"),c.C$Y(),c.OEk(52,". All buttons inside a placeholder card should be flat (btn-link). "),c.I0R(53,"div",3)(54,"div",4)(55,"div",13)(56,"div",6),c.OEk(57,"Placeholder card"),c.C$Y(),c.I0R(58,"div",7),c.OEk(59," Card block "),c.I0R(60,"div")(61,"a",14),c.OEk(62,"Action"),c.C$Y()()()()()(),c.wR5(63,"clr-code-snippet",12),c.I0R(64,"h2"),c.OEk(65,"Card with custom actions"),c.C$Y(),c.OEk(66," To use a card with custom actions, use the classes "),c.I0R(67,"code",10),c.OEk(68,"card-actions"),c.C$Y(),c.OEk(69," on the dropdown itself and "),c.I0R(70,"code",10),c.OEk(71,"card-action"),c.C$Y(),c.OEk(72," on the dropdown-toggle. "),c.I0R(73,"div",3)(74,"div",4)(75,"div",15)(76,"div",6),c.OEk(77," Card header with custom actions "),c.I0R(78,"clr-dropdown",16)(79,"button",17),c.wR5(80,"cds-icon",18),c.C$Y(),c.yuY(81,I,7,0,"clr-dropdown-menu",19),c.C$Y()(),c.I0R(82,"div",7),c.OEk(83,"Card Block"),c.C$Y()()()(),c.wR5(84,"clr-code-snippet",12),c.C$Y()()),2&t&&(c.E7m("title",i.title),c.yG2(31),c.E7m("ngForOf",i.cards),c.yG2(15),c.E7m("clrCode",i.htmlExample),c.yG2(17),c.E7m("clrCode",i.htmlExamplePlaceholder),c.yG2(21),c.E7m("clrCode",i.htmlExampleCustomActions))},dependencies:[r.ay,r.u_,l.k1o,l._c6,l.crz,l.ExQ,l.WG8,l.SAM,u.U,p.Q,n.Koz],encapsulation:2})}return e})();var Y=a(26392),$=a(28488),g=a(44004);let w=(()=>{class e{static \u0275fac=function(t){return new(t||e)};static \u0275mod=c.a4G({type:e});static \u0275inj=c.s3X({imports:[r.MD,v.y,l.u_Q,g.A,Y.S,$.qQ.forChild([{path:"",component:R}]),n._qe]})}return e})()}}]);